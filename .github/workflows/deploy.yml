# .github/workflows/deploy.yml
name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Create service account key file from secret
      - name: Set up GCP service account key
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/gcp-sa-key.json
          echo "Service account key file created at /tmp/gcp-sa-key.json"

      # Authenticate directly with gcloud using the key file
      - name: Authenticate with gcloud
        run: |
          gcloud auth activate-service-account --key-file=/tmp/gcp-sa-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          
          # Verify gcloud is authenticated successfully
          echo "Active gcloud account:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"
          
          # Verify project is set correctly
          echo "Active project:"
          gcloud config get-value project

      # Configure Docker to use gcloud credentials
      - name: Configure Docker for Artifact Registry
        run: |
          # Get access token from gcloud
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          
          # Login to Artifact Registry with access token
          echo "$ACCESS_TOKEN" | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev

      # Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/escrow-service-bot:${{ github.sha }}"
          echo "Building Docker image: ${IMAGE_NAME}"
          docker build -t "${IMAGE_NAME}" .
          echo "IMAGE_BUILT=${IMAGE_NAME}" >> $GITHUB_ENV

      # Push Docker image to Artifact Registry
      - name: Push Docker image to Artifact Registry
        run: |
          echo "Pushing image: ${{ env.IMAGE_BUILT }}"
          docker push "${{ env.IMAGE_BUILT }}"

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          echo "Deploying image to Cloud Run: ${{ env.IMAGE_BUILT }}"
          gcloud run deploy escrow-service-bot \
            --image "${{ env.IMAGE_BUILT }}" \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --timeout=300s \
            --cpu=1 \
            --memory=512Mi \
            --cpu-boost \
            --set-env-vars="TOKEN=${{ secrets.BOT_TOKEN }},DATABASE_URL=${{ secrets.DATABASE_URL }},DATABASE_NAME=${{ secrets.DATABASE_NAME }},WEBHOOK_URL=https://escrow-service-bot-${{ secrets.GCP_PROJECT_ID }}.run.app/webhook,WEBHOOK_MODE=true,BTCPAY_URL=${{ secrets.BTCPAY_URL }},BTCPAY_API_KEY=${{ secrets.BTCPAY_API_KEY }},BTCPAY_STORE_ID=${{ secrets.BTCPAY_STORE_ID }},ADMIN_ID=${{ secrets.ADMIN_ID }}"

      # Clean up service account key
      - name: Clean up service account key
        if: always() # Run even if previous steps fail
        run: |
          rm -f /tmp/gcp-sa-key.json
          echo "Service account key file removed"
