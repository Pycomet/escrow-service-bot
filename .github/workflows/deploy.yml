# .github/workflows/deploy.yml
name: Build and Deploy to Cloud Run via GitHub Actions

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Display gcloud authentication state
        run: |
          echo "GCLOUD AUTH LIST:"
          gcloud auth list
          echo "GCLOUD CONFIG LIST:"
          gcloud config list
          echo "GCLOUD INFO:"
          gcloud info
          echo "ACTIVE GCLOUD PROJECT:"
          gcloud config get-value project

      - name: Configure Cloud Build logging for gcloud (client-side precaution)
        run: gcloud config set builds/logging CLOUD_LOGGING_ONLY --project=${{ secrets.GCP_PROJECT_ID }}
        continue-on-error: true

      # OPTION 1: Keep trying with gcloud auth configure-docker (current approach)
      # - name: Configure Docker to use gcloud credential helper
      #   run: |
      #     gcloud auth configure-docker us-central1-docker.pkg.dev --project=${{ secrets.GCP_PROJECT_ID }}
      #     echo "Docker credential helper configured for us-central1-docker.pkg.dev"
      #     echo "Docker config.json contents:"
      #     cat ~/.docker/config.json || echo "Could not display ~/.docker/config.json"

      # OPTION 2: Try explicit docker login with an access token
      - name: Authenticate Docker with Access Token
        run: |
          echo "Attempting Docker login with access token..."
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          if [ -z "$ACCESS_TOKEN" ]; then
            echo "Failed to get access token from gcloud."
            exit 1
          fi
          docker login \
            -u oauth2accesstoken \
            -p "${ACCESS_TOKEN}" \
            https://us-central1-docker.pkg.dev
          echo "Docker login attempted."
          echo "Docker config.json contents after login:"
          cat ~/.docker/config.json || echo "Could not display ~/.docker/config.json"

      - name: Build Docker image
        id: docker_build
        run: |
          IMAGE_NAME="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/escrow-service-bot:${{ github.sha }}"
          echo "Building Docker image: ${IMAGE_NAME}"
          docker build -t "${IMAGE_NAME}" .
          echo "IMAGE_BUILT=${IMAGE_NAME}" >> $GITHUB_ENV
      
      - name: Push Docker image to Artifact Registry
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled # For potential debug flags if needed later
        run: |
          echo "Pushing image: ${{ env.IMAGE_BUILT }}"
          # Try with --debug for more verbose docker output if it still fails
          docker --debug push "${{ env.IMAGE_BUILT }}"
          # docker push "${{ env.IMAGE_BUILT }}" # Original command

      - name: Deploy to Cloud Run
        run: |
          echo "Deploying image to Cloud Run: ${{ env.IMAGE_BUILT }}"
          gcloud run deploy escrow-service-bot \
            --image "${{ env.IMAGE_BUILT }}" \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --project=${{ secrets.GCP_PROJECT_ID }}
            # Add --set-env-vars if needed
