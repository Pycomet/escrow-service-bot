{
  "timestamp": "20250605_022303",
  "test_results": [
    {
      "script": "test_web3_wallet_generation.py",
      "success": true,
      "stdout": "\ud83d\ude80 Starting Web3 Wallet Generation Test Suite\n============================================================\n\ud83d\udd37 Testing Solana Wallet Generation...\n\u2705 Solana wallet generation: PASSED\n   Address: 3K5nmJLKfoKLdzo8G1MvJm11bhQaLtoBLMPYm2wSFdMu\n   Mnemonic: foil tourist silly chair grass crane milk settle cigar wedding blast trumpet\n\n\ud83d\udd36 Testing BSC Wallet Generation...\n\u2705 BSC wallet generation: PASSED\n   Address: 0x8Ed422F88dC3ec55E77d275a14478b6199e54C3A\n   Mnemonic: trumpet friend sphere circle palm member smile luxury fade blossom minute desert\n\n\ud83d\udd38 Testing Litecoin Wallet Generation...\nMnemonic: retire boil castle staff pet force snow spell hope slow believe huge\n\u2705 Litecoin wallet generation: PASSED\n   Address: LXgmExb1w5ixh3VrrThjbHHfFKxc1Zpy8w\n   Mnemonic: retire boil castle staff pet force snow spell hope slow believe huge\n\n\ud83d\udc15 Testing Dogecoin Wallet Generation...\n\u2705 Dogecoin wallet generation: PASSED\n   Address: DH7NMvmUdYCLHRoU83Acvd3vHs2WLFa2NB\n   Mnemonic: invest trial shield cover spin youth mammal unusual frown zero link melt\n\n\ud83d\udd3a Testing Tron Wallet Generation...\n\u2705 Tron wallet generation: PASSED\n   Address: TMQdwefaUHxnZ43He9mDiJcsET89t3CCYy\n   Mnemonic: fashion record helmet chunk super draft sniff pool round dentist service dog\n\n\ud83d\udd0d Testing Address Validation...\n   \u2705 SOL address validation: 9eeneoxQmx... -> True\n   \u274c BSC address validation: Expected True, got False for 0x742d35Cc1B1c1F7BC4...\n   \u274c LTC address validation: Expected True, got False for ltc1qw508d6qejxtdg4y...\n   \u2705 DOGE address validation: DNABPoSJKy... -> True\n   \u2705 SOL address validation: invalid_ad... -> False\n   \u2705 BSC address validation: ... -> False\n   \u2705 LTC address validation: not_an_add... -> False\n   \u2705 DOGE address validation: 123456... -> False\nAddress validation tests: 6/8 passed (75.0%)\n\n============================================================\n\ud83d\udcca TEST SUMMARY\n============================================================\nSOLANA               : \u2705 PASSED\nBSC                  : \u2705 PASSED\nLITECOIN             : \u2705 PASSED\nDOGECOIN             : \u2705 PASSED\nTRON                 : \u2705 PASSED\nADDRESS_VALIDATION   : \u2705 PASSED\n\nOverall Success Rate: 6/6 (100.0%)\n\n\ud83d\udcbe Test results saved to: wallet_generation_test_results_latest.json\n\n\ud83c\udf89 All tests passed! Your wallet generation functions are working correctly.\n",
      "stderr": "",
      "returncode": 0
    },
    {
      "script": "test_web3_balance_checking.py",
      "success": true,
      "stdout": "\ud83d\ude80 Starting Web3 Balance Checking Test Suite\n============================================================\n\n\ud83c\udfd7\ufe0f  Creating Test Wallets for Balance Checks...\n   Solana test wallet: F2vCLnPkMb8WZ7b6LxckBFWLh3hVnUCzx6roQNh6KBwx\n   BSC test wallet: 0xd2f7Eb8defDC4De58A9403d3CC3dF1F34e4974cB\n   Dogecoin test wallet: DBuzSgwjEzhdRrPSsrkyGw7cvUkePPRe9w\n\u2705 Test wallet creation completed\n\ud83d\udd37 Testing Solana Balance Checking...\n   SOL Balance for 9eeneoxQ...7UNE5D8W: [{'publicKey': '9eeneoxQmxbYFTrffFS5rDz1VsdCpQuzd4D67UNE5D8W', 'amount': Decimal('0.036064735')}, 'https://solscan.io/account/9eeneoxQmxbYFTrffFS5rDz1VsdCpQuzd4D67UNE5D8W']\n   USDT Balance for 9eeneoxQ...7UNE5D8W: [{'publicKey': '9eeneoxQmxbYFTrffFS5rDz1VsdCpQuzd4D67UNE5D8W', 'amount': Decimal('1.877585')}, 'https://solscan.io/account/9eeneoxQmxbYFTrffFS5rDz1VsdCpQuzd4D67UNE5D8W']\n   SOL Balance for 11111111...11111112: [{'publicKey': '11111111111111111111111111111112', 'amount': Decimal('0.224938104')}, 'https://solscan.io/account/11111111111111111111111111111112']\n   \u274c Error checking balance for 11111111111111111111111111111112: InvalidParamsMessage { message: \"Invalid param: could not find account\" }\n   SOL Price: $153.91\n\u2705 Solana balance checking: PASSED\n\n\ud83d\udd36 Testing BSC Balance Checking...\n   BNB Balance for 0x742d35Cc1B1c1F7BC46E2e0c6Ac9A4eCeD3e5C5D: [{'publicKey': '0x742d35CC1B1c1F7bc46e2e0c6ac9A4ECED3E5c5D', 'amount': 0}, 'https://bscscan.com/address/0x742d35CC1B1c1F7bc46e2e0c6ac9A4ECED3E5c5D']\n   BNB Balance for 0x0000000000000000000000000000000000000000: [{'publicKey': '0x0000000000000000000000000000000000000000', 'amount': Decimal('99207.517832941688783398')}, 'https://bscscan.com/address/0x0000000000000000000000000000000000000000']\n   BNB Price: $666.15\n\u2705 BSC balance checking: PASSED\n\n\ud83d\udd0d Testing Generic Balance Functions...\n\u274c Generic balance checking: FAILED - Address validation failed: Invalid address format\n   Error details: Traceback (most recent call last):\n  File \"/home/codefred/Documents/escrow-service-bot/functions/scripts/get_bnb_balance.py\", line 29, in get_balance_bnb_bsc\n    address = validate_and_format_address(address)\n  File \"/home/codefred/Documents/escrow-service-bot/functions/scripts/get_bnb_balance.py\", line 16, in validate_and_format_address\n    raise ValueError(\"Invalid address format\")\nValueError: Invalid address format\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/codefred/Documents/escrow-service-bot/test_web3_balance_checking.py\", line 151, in test_generic_balance_checking\n    balance = get_balance_bnb_bsc(test_address)\n  File \"/home/codefred/Documents/escrow-service-bot/functions/scripts/get_bnb_balance.py\", line 31, in get_balance_bnb_bsc\n    raise ValueError(f\"Address validation failed: {e}\")\nValueError: Address validation failed: Invalid address format\n\n\n\ud83e\uddee Testing Balance Validation...\n   Number validation '123.45': 123.45\n   Number validation '0.001': 0.001\n   Number validation 'invalid': False\n   Number validation '': False\n   Number validation '0': 0\n   Number validation '-5': -5\n   Fee calculation (100 USDT, 2%): 2.000\n\u2705 Balance validation: PASSED\n\n\ud83d\udcb0 Testing Price Fetching...\n{'tron': {'usd': 0.27473}}\n   TRX Price: $0.27473\n\u2705 Price fetching: PASSED\n\n============================================================\n\ud83d\udcca TEST SUMMARY\n============================================================\nSOLANA BALANCE            : \u2705 PASSED\nBSC BALANCE               : \u2705 PASSED\nGENERIC BALANCE           : \u274c FAILED\nBALANCE VALIDATION        : \u2705 PASSED\nPRICE FETCHING            : \u2705 PASSED\n\nOverall Success Rate: 4/5 (80.0%)\n\n============================================================\n\ud83d\udcdd IMPORTANT NOTES\n============================================================\n\u2022 New wallets will have zero balance (this is expected)\n\u2022 Some RPC endpoints may be rate-limited\n\u2022 Network connectivity issues may affect results\n\u2022 Balance checking requires active internet connection\n\n\ud83d\udcbe Test results saved to: balance_checking_test_results_20250605_022300.json\n\n\ud83c\udf89 Balance checking tests completed successfully!\n",
      "stderr": "",
      "returncode": 0
    },
    {
      "script": "test_web3_transaction_simulation.py",
      "success": true,
      "stdout": "\ud83d\ude80 Starting Web3 Transaction Simulation Test Suite\n============================================================\n\u26a0\ufe0f  NOTE: This script only SIMULATES transactions - no real funds are sent!\n============================================================\n\ud83d\udd37 Testing Solana Transaction Building...\n   Sender: EqRu2sgH27iKBsfFvQJL3EizrKyCuKLBYiKB6vqNxYq9\n   Recipient: 59MjNqbbz3ChqsdGGoHiDA3m5AfQws1ntJmtkK3YGXtQ\n   Building USDT transaction structure...\n   Transaction amount: 10.0 USDT\n   Fee: 0.1 USDT\n   Broker fee: 0.05 USDT\n   Final amount to recipient: 9.75 USDT\n   Our fee: 0.1 USDT\n   Broker fee: 0.05 USDT\n\u2705 Solana transaction building: PASSED\n\n\ud83d\udd36 Testing BSC Transaction Building...\n   Sender: 0x464B53804a399e8bD721A1A0ECAa992D14B012c7\n   Recipient: 0xbE2CBe4576fFCCCfA7eDFCdd0848C6B878940161\n   Building BNB transaction structure...\n   Transaction amount: 0.1 BNB\n   Gas price: 5 Gwei\n   Gas limit: 21000\n   Estimated gas fee: 0.000105 BNB\n   Total needed: 0.100105 BNB\n\u2705 BSC transaction building: PASSED\n\n\ud83d\udd38 Testing Litecoin Transaction Building...\nMnemonic: innocent mobile refuse ordinary episode shiver mercy talk betray evil hurdle dash\nMnemonic: draw fiscal prison pledge hen series walnut word bind torch master open\n   Sender: LQCfi8q761zsB2mRFEm6Byar5vAPfKmLPB\n   Recipient: LXu2zQaCkEWDF3hprALvpGMp7DZ8ZPMQPC\n   Building LTC transaction structure...\n   Transaction amount: 0.01 LTC\n   Fee rate: 10 sat/byte\n   Estimated transaction size: 250 bytes\n   Estimated fee: 0.00002500 LTC\n   Total needed: 0.01002500 LTC\n\u2705 Litecoin transaction building: PASSED\n\n\ud83d\udc15 Testing Dogecoin Transaction Building...\n   Sender: DMWBLsQLxH2ZkWtzDnXpXr9urFXDEQC8W7\n   Recipient: DL6UtG6mDjsBp3Km4HA8z9TWxZK78z4SJB\n   Building DOGE transaction structure...\n   Transaction amount: 100 DOGE\n   Fee rate: 1000 sat/byte\n   Estimated transaction size: 250 bytes\n   Estimated fee: 0.00250000 DOGE\n   Total needed: 100.00250000 DOGE\n\u2705 Dogecoin transaction building: PASSED\n\n\ud83d\udd3a Testing Tron Transaction Building...\n   Sender: TRbYCGMaGUBsjPQk4BVFzCfXAzkVjhdag3\n   Recipient: TTrLvD6dmDeftjrCiiEBRhyDneJhsQ5tzC\n   Building TRX transaction structure...\n   Transaction amount: 100 TRX\n   Bandwidth fee: 0.001 TRX\n   Energy fee: 0 TRX\n   Total fees: 0.001 TRX\n   Total needed: 100.001 TRX\n\u2705 Tron transaction building: PASSED\n\n\ud83d\udd0d Testing Transaction Checker Functions...\n   \u274c LTC transaction checker import failed: cannot import name 'is_ltc_transaction_confirmed' from 'ltc_transaction_checker' (/home/codefred/Documents/escrow-service-bot/functions/scripts/ltc_transaction_checker.py)\n   \u274c DOGE transaction checker import failed: cannot import name 'is_doge_transaction_confirmed' from 'doge_transaction_checker' (/home/codefred/Documents/escrow-service-bot/functions/scripts/doge_transaction_checker.py)\n\u2705 Transaction checker functionality: FAILED\n\n\ud83d\udd17 Testing Wallet Integration...\n\u274c Wallet integration: FAILED - No module named 'globalState'\n\n============================================================\n\ud83d\udcca TEST SUMMARY\n============================================================\nSOLANA TRANSACTION        : \u2705 PASSED\nBSC TRANSACTION           : \u2705 PASSED\nLITECOIN TRANSACTION      : \u2705 PASSED\nDOGECOIN TRANSACTION      : \u2705 PASSED\nTRON TRANSACTION          : \u2705 PASSED\nTRANSACTION CHECKERS      : \u274c FAILED\nWALLET INTEGRATION        : \u274c FAILED\n\nOverall Success Rate: 5/7 (71.4%)\n\n============================================================\n\ud83d\udcdd IMPORTANT NOTES\n============================================================\n\u2022 All transactions are SIMULATED - no real funds sent\n\u2022 This tests transaction structure building only\n\u2022 Actual transaction sending requires funded wallets\n\u2022 Fee calculations are estimates and may vary\n\u2022 Network conditions affect real transaction fees\n\n\ud83d\udcbe Test results saved to: transaction_simulation_test_results_20250605_022302.json\n\n\ud83c\udf89 Transaction simulation tests completed successfully!\n",
      "stderr": "",
      "returncode": 0
    }
  ],
  "summary": {
    "total_scripts": 3,
    "successful_scripts": 3,
    "failed_scripts": 0,
    "success_rate": 100.0
  }
}