{
  "test_session": {
    "start_time": "2025-06-05T02:54:50.753656",
    "test_type": "wallet_functionality",
    "version": "1.0.0",
    "end_time": "2025-06-05T02:54:53.192760",
    "exit_code": 1,
    "stdout": "============================= test session starts ==============================\ncollecting ... collected 24 items\n\ntests/test_wallet_functionality.py::TestWalletManager::test_wallet_manager_initialization PASSED [  4%]\ntests/test_wallet_functionality.py::TestWalletManager::test_supported_coins_configuration PASSED [  8%]\ntests/test_wallet_functionality.py::TestWalletManager::test_create_wallet_for_user_success PASSED [ 12%]\ntests/test_wallet_functionality.py::TestWalletManager::test_create_wallet_for_user_existing_wallet PASSED [ 16%]\ntests/test_wallet_functionality.py::TestWalletManager::test_get_user_wallet PASSED [ 20%]\ntests/test_wallet_functionality.py::TestWalletManager::test_get_user_wallet_not_found PASSED [ 25%]\ntests/test_wallet_functionality.py::TestWalletManager::test_get_wallet_coin_addresses PASSED [ 29%]\ntests/test_wallet_functionality.py::TestWalletManager::test_get_wallet_coin_address PASSED [ 33%]\ntests/test_wallet_functionality.py::TestWalletManager::test_refresh_wallet_balances PASSED [ 37%]\ntests/test_wallet_functionality.py::TestWalletManager::test_add_coin_to_wallet_success FAILED [ 41%]\ntests/test_wallet_functionality.py::TestWalletManager::test_add_coin_to_wallet_already_exists PASSED [ 45%]\ntests/test_wallet_functionality.py::TestWalletManager::test_deactivate_wallet PASSED [ 50%]\ntests/test_wallet_functionality.py::TestWalletManager::test_get_supported_coins PASSED [ 54%]\ntests/test_wallet_functionality.py::TestWalletManager::test_get_default_coins PASSED [ 58%]\ntests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_handler_no_wallet PASSED [ 62%]\ntests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_handler_with_wallet ERROR [ 66%]\ntests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_create_handler_success ERROR [ 70%]\ntests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_create_handler_failure PASSED [ 75%]\ntests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_refresh_handler_success PASSED [ 79%]\ntests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_details_handler_success ERROR [ 83%]\ntests/test_wallet_functionality.py::TestWalletIntegration::test_generate_id_uniqueness PASSED [ 87%]\ntests/test_wallet_functionality.py::TestWalletIntegration::test_wallet_types_structure PASSED [ 91%]\ntests/test_wallet_functionality.py::TestWalletIntegration::test_encryption_key_generation PASSED [ 95%]\ntests/test_wallet_functionality.py::TestWalletIntegration::test_coin_network_mapping PASSED [100%]\n\n==================================== ERRORS ====================================\n_____ ERROR at setup of TestWalletHandlers.test_wallet_handler_with_wallet _____\nfile /home/codefred/Documents/escrow-service-bot/tests/test_wallet_functionality.py, line 357\n      @patch('handlers.wallet.WalletManager.get_user_wallet')\n      @patch('handlers.wallet.WalletManager.get_wallet_coin_addresses')\n      @patch('handlers.wallet.send_message_or_edit')\n      @pytest.mark.asyncio\n      async def test_wallet_handler_with_wallet(self, mock_send, mock_get_addresses, mock_get_wallet,\n                                              mock_update, mock_context, sample_wallet, sample_coin_addresses):\n          \"\"\"Test wallet handler when user has a wallet\"\"\"\n          # Mock wallet and addresses\n          mock_get_wallet.return_value = sample_wallet\n          mock_get_addresses.return_value = sample_coin_addresses\n          mock_send.return_value = Mock()\n\n          # Call handler\n          await wallet_handler(mock_update, mock_context)\n\n          # Should show wallet details\n          mock_send.assert_called_once()\n          call_args = mock_send.call_args\n          message_text = call_args[0][1]\n          assert \"My Wallet\" in message_text\n          assert sample_wallet['wallet_name'] in message_text\n          assert \"BTC\" in message_text\n          assert \"ETH\" in message_text\nE       fixture 'sample_wallet' not found\n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_callback_update, mock_context, mock_update, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, session_mocker, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/codefred/Documents/escrow-service-bot/tests/test_wallet_functionality.py:357\n___ ERROR at setup of TestWalletHandlers.test_wallet_create_handler_success ____\nfile /home/codefred/Documents/escrow-service-bot/tests/test_wallet_functionality.py, line 381\n      @patch('handlers.wallet.WalletManager.create_wallet_for_user')\n      @patch('handlers.wallet.WalletManager.get_wallet_coin_addresses')\n      @pytest.mark.asyncio\n      async def test_wallet_create_handler_success(self, mock_get_addresses, mock_create_wallet,\n                                                  mock_callback_update, mock_context, sample_wallet, sample_coin_addresses):\n          \"\"\"Test successful wallet creation\"\"\"\n          # Mock successful creation\n          mock_create_wallet.return_value = sample_wallet\n          mock_get_addresses.return_value = sample_coin_addresses\n\n          # Set up callback query\n          mock_callback_update.callback_query.edit_message_text = AsyncMock()\n\n          # Call handler\n          await wallet_create_handler(mock_callback_update, mock_context)\n\n          # Should show success message\n          assert mock_callback_update.callback_query.edit_message_text.call_count >= 2  # Loading + success\n\n          # Check final success message\n          final_call = mock_callback_update.callback_query.edit_message_text.call_args_list[-1]\n          message_text = final_call[0][0]\n          assert \"Wallet Created Successfully\" in message_text\nE       fixture 'sample_wallet' not found\n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_callback_update, mock_context, mock_update, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, session_mocker, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/codefred/Documents/escrow-service-bot/tests/test_wallet_functionality.py:381\n___ ERROR at setup of TestWalletHandlers.test_wallet_details_handler_success ___\nfile /home/codefred/Documents/escrow-service-bot/tests/test_wallet_functionality.py, line 444\n      @patch('handlers.wallet.WalletManager.get_user_wallet')\n      @patch('handlers.wallet.WalletManager.get_wallet_coin_addresses')\n      @pytest.mark.asyncio\n      async def test_wallet_details_handler_success(self, mock_get_addresses, mock_get_wallet,\n                                                   mock_callback_update, mock_context, sample_wallet, sample_coin_addresses):\n          \"\"\"Test wallet details handler success\"\"\"\n          # Mock wallet and addresses\n          mock_get_wallet.return_value = sample_wallet\n          mock_get_addresses.return_value = sample_coin_addresses\n\n          # Set up callback query\n          mock_callback_update.callback_query.data = \"wallet_details_wallet_123\"\n          mock_callback_update.callback_query.edit_message_text = AsyncMock()\n\n          # Call handler\n          await wallet_details_handler(mock_callback_update, mock_context)\n\n          # Should show wallet details\n          mock_callback_update.callback_query.edit_message_text.assert_called_once()\n          call_args = mock_callback_update.callback_query.edit_message_text.call_args\n          message_text = call_args[0][0]\n          assert \"Wallet Details\" in message_text\n          assert sample_wallet['wallet_name'] in message_text\nE       fixture 'sample_wallet' not found\n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_callback_update, mock_context, mock_update, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, session_mocker, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/codefred/Documents/escrow-service-bot/tests/test_wallet_functionality.py:444\n=================================== FAILURES ===================================\n______________ TestWalletManager.test_add_coin_to_wallet_success _______________\ntests/test_wallet_functionality.py:250: in test_add_coin_to_wallet_success\n    assert success is True\nE   assert False is True\n----------------------------- Captured stderr call -----------------------------\n2025-06-05 02:54:52,196 - functions.wallet - WARNING - Generated new encryption key. Store this securely: VkxhakZMYmtyc3ZKdkRoTTlCMW84OGJoVkxCaGxneHJaV05aM3FKSXFiQT0=\n2025-06-05 02:54:52,196 - functions.wallet - ERROR - Error adding coin TRX to wallet wallet_123: \n------------------------------ Captured log call -------------------------------\nWARNING  functions.wallet:wallet.py:128 Generated new encryption key. Store this securely: VkxhakZMYmtyc3ZKdkRoTTlCMW84OGJoVkxCaGxneHJaV05aM3FKSXFiQT0=\nERROR    functions.wallet:wallet.py:451 Error adding coin TRX to wallet wallet_123:\n=============================== warnings summary ===============================\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/pytz/tzinfo.py:27\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/pytz/tzinfo.py:27: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\n    _epoch = datetime.utcfromtimestamp(0)\n\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/bson/datetime_ms.py:29\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/bson/datetime_ms.py:29: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\n    EPOCH_NAIVE = datetime.datetime.utcfromtimestamp(0)\n\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/quart/helpers.py:246\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/quart/helpers.py:246: DeprecationWarning: 'pkgutil.get_loader' is deprecated and slated for removal in Python 3.14; use importlib.util.find_spec() instead\n    loader = pkgutil.get_loader(module)\n\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:751\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:751\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:751\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:751: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    parts = parts or [ast.Str(\"\")]\n\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:748\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:748\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:748\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:748\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:748\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:748\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:748: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    _convert(elem) if is_dynamic else ast.Str(s=elem)\n\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n  /usr/lib64/python3.13/ast.py:608: DeprecationWarning: Constant.__init__ got an unexpected keyword argument 's'. Support for arbitrary keyword arguments is deprecated and will be removed in Python 3.15.\n    return Constant(*args, **kwargs)\n\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n  /usr/lib64/python3.13/ast.py:608: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    return Constant(*args, **kwargs)\n\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n../../../../usr/lib64/python3.13/ast.py:608\n  /usr/lib64/python3.13/ast.py:608: DeprecationWarning: Constant.__init__ missing 1 required positional argument: 'value'. This will become an error in Python 3.15.\n    return Constant(*args, **kwargs)\n\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:755: 10 warnings\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:755: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    if isinstance(p, ast.Str) and isinstance(ret[-1], ast.Str):\n\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    ret[-1] = ast.Str(ret[-1].s + p.s)\n\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    ret[-1] = ast.Str(ret[-1].s + p.s)\n\n../../.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/websockets/legacy/__init__.py:6\n  /home/codefred/.pyenv/versions/escrowbotenv/lib64/python3.13/site-packages/websockets/legacy/__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_wallet_functionality.py::TestWalletManager::test_add_coin_to_wallet_success\nERROR tests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_handler_with_wallet\nERROR tests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_create_handler_success\nERROR tests/test_wallet_functionality.py::TestWalletHandlers::test_wallet_details_handler_success\n============= 1 failed, 20 passed, 53 warnings, 3 errors in 1.23s ==============\n",
    "stderr": "",
    "status": "FAILED"
  },
  "test_categories": {
    "wallet_manager": {
      "passed": 0,
      "failed": 0,
      "errors": []
    },
    "wallet_handlers": {
      "passed": 0,
      "failed": 0,
      "errors": []
    },
    "integration": {
      "passed": 0,
      "failed": 0,
      "errors": []
    }
  }
}